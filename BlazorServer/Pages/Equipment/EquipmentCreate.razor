@page "/equipment/create"
@inject IEquipmentService _equipmentService
@inject IRoomService _roomService

@inject NavigationManager _navigationManager

<PageTitle>Add Equipment</PageTitle>
<h1>Create Equipment</h1>
<hr />

<div class="createForm" id="CreteRoom">
    <EditForm Model="@_equipment" OnValidSubmit="@Create">
        <FluentValidationValidator @ref="_fluentValidationValidator" DisableAssemblyScanning="@true" />
        <ValidationSummary />
        <div class="form-group">
            <label>Name: </label>
            <InputText @bind-Value="@_equipment.EquipmentName" class="form-control" />
            <ValidationMessage For="@(() => _equipment.EquipmentName)" />
        </div>
        <div class="form-group">
            <label>Quantity: </label>
            <InputNumber @bind-Value="@_equipment.Quantity" class="form-control" />
            <ValidationMessage For="@(() => _equipment.Quantity)" />
        </div>
        <div class="form-group">
            <label>Room: </label>
            <InputSelect @bind-Value="@_equipment.RoomId" class="form-control">
                @foreach (var room in rooms)
                {
                    <option value="@room.RoomId">@room.RoomName</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _equipment.RoomId)" />
        </div>
        <div>
            <button id="submitCreate" type="submit">Save</button>
            <button id="submitCreate" type="button" onclick="window.history.back()">Back</button>
        </div>
    </EditForm>
</div>

@code {
    private CreateEquipmentDto _equipment = new CreateEquipmentDto();
    private FluentValidationValidator? _fluentValidationValidator;
    private List<RoomDto> rooms;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _equipment.EquipmentName = "Equipment";
        rooms = _roomService.GetAll();
    }

    private void Create()
    {
        _equipmentService.Create(_equipment);
        BackToList();
    }

    private void BackToList()
    {
        _navigationManager.NavigateTo("/equipment");
    }
}